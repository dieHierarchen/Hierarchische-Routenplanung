package GUI;

import java.util.Observable;
import java.util.Observer;

public class Presenter implements Observer{
	
	private Modell modell;
	private LoadingScreenWorker loadingWorker;
	private MainWindow mainWindow;
	private LoadingAppWindow loadingWindow;
	
	private Presenter() {
		modell = new Modell();
		modell.addObserver(this);
		
		mainWindow = new MainWindow();
		loadingWindow = new LoadingAppWindow();
	}

	public void startApplication() throws InterruptedException {
		//Wenn Work startet öffne LoadingScreen
		LoadingAppWindow loadingScreen = new LoadingAppWindow();
		loadingScreen.setVisible(true);
		loadingWorker.execute();
	}

	@Override
	public void update(Observable o, Object arg) {
		if (arg instanceof Integer) {
			
			int eventHandle = (Integer) arg;
			
			if (eventHandle == 1) {
				startMainApplication();
			}
			if (eventHandle == 2) {
				DrawResultMainWindow();
			}
		}
	}
	
	private void startMainApplication() {
		loadingWindow.setVisible(false);
		mainWindow.setVisible(true);
	}
	
	private void DrawResultMainWindow() {
		//Zeichne result in MainWindow PictureFrame
	}
}
