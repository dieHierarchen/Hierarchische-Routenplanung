import java.awt.List;
import java.util.ArrayList;

import org.w3c.dom.Element;
import org.xml.sax.Attributes;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;

public class Handler extends DefaultHandler {
	OptimizedXMLCreator xmlCreator = new OptimizedXMLCreator();
	Element element;
	boolean save = false;
	private AttributesImpl attributes = new AttributesImpl();
	private String qNameCurrentTag = "";
	private ElementContent elements;
	
	int savedElements = 0;
	int hundredThousandCounter = 0;
	
	public void endDocument() {
		xmlCreator.end();
	}
	
	private class ElementContent{
		private String qName;
		private AttributesImpl attributes;
		private ArrayList<ElementContent> children = new ArrayList<ElementContent>();
		
		public ElementContent(String qName, AttributesImpl attributes) {
			this.qName = qName;
			this.attributes = attributes;
		}
		
		public void addChild(ElementContent element) {
			children.add(element);
		}
	}
	
	public void startElement(String nameSpaceURI, String localName, String qName, Attributes atts) {
		
		if (qName == "node") {
			if(save) {
				printElement(elements);
			}
			
			save = false;
			
			attributes.clear();
			int length = atts.getLength();
			if (length > 0) {
				for (int i = 0; i < length; i++) {
					attributes.addAttribute("", "", atts.getQName(i), "", atts.getValue(i));
				}
			}
			
			elements = new ElementContent(qName, attributes);
		} else {
			save = true;
			
			attributes.clear();
			int length = atts.getLength();
			if (length > 0) {
				for (int i = 0; i < length; i++) {
					attributes.addAttribute("", "", atts.getQName(i), "", atts.getValue(i));
				}
			}

			elements.addChild(new ElementContent(qName, attributes));
			
			savedElements++;
			if(savedElements >= 100000) {
				savedElements = 0;
				hundredThousandCounter++;
				System.out.println("One Hundred Thousand Lines Printed: " + hundredThousandCounter + "times!");
			}
		}
	}
	
	private void printElement(ElementContent el) {
		xmlCreator.add(el.qName, el.attributes);
		for(ElementContent child:el.children) {
			printElement(child);
		}
		xmlCreator.endEl(el.qName);
	}
	
	public void endElement(String namespaceUI, String localName, String qName) {
		if(save) {
			if(qNameCurrentTag != "") {
				xmlCreator.add(qNameCurrentTag,attributes);
			}
			xmlCreator.endEl(qName);
			qNameCurrentTag = "";
		}
	}
	
	public void characters(char[] ch, int start, int length) {
		
	}
}
